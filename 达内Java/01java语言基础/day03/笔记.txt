正课：
1.运算符
   第一组：算术运算符(7个)
    + - * / % ++ --
    %：取余数 余数为0即整除
      a%b 若a<b那么结果必须是a
          若a>b那么要算算
    ++：
      01.单独使用时(一行中只有a++或++a)，在前在后无差别
      02.被使用时(一行之中除了a++或++a还有其他代码)：在前在后有差别
        a++的值为a
        ++a的值为a+1
      03.无论在前在后，a本身都自增1
    第二组：关系运算符(6个)
      > < >= <= == !=
    第三组：逻辑运算符(3个)
       短路|| 短路&& !
        注意：!后面一定要加boolean 这点与JS不同
        短路：
          &&：第一个为false的时候，结果必为false(不会再执行后面)
          ||：第一个为true的时候，结果必为true(不会再执行后面)
      不短路| 不短路&
        |和&不会产生短路，后面的要进行运算
    第四组：赋值运算符(1个)
      = += -= *= /= %=
      注意：
        byte s = 1;
        s+=10;//不报错，默认会强转  相当于自动执行了(byte)(s+10)
        s = s+10;//报错！！！
    第五组：字符串连接运算符
      +
      字符串类型：String,必须双引！！！！！(后面会讲)
      任何类型与String做+运算，结果都变为String
    第六组：三目运算符
      语法：boolean1?
              a:boolean2?
              b:boolean3?
              d:e;
        可嵌套：
          String str = num>0?"正数":(num==0?"0":"负数")
2.分支结构(四组)
  01.if
  02.if else
  03.else if //碰到数字范围的，0~1500,1500~3000这种的，记得简写if中的范围
  04.switch(xxx){case}  //switch只能判断字符串和整数
    优点：效率高、结构清晰
    缺点：只能对byte/short/int/char/String操作，只能判断相等

补充：
无论多复杂的程序都可以通过三种结构来实现：
01.顺序结构：代码从上到下依次执行
02.分支结构：if else switch(x){case}
03.循环结构：for while
