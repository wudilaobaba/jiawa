正课
1.package和import
  package：
  1)作用：避免类的命名冲突
  2)类的全称:包名.类名
  3)包名可以有层次结构
  4)包名的所有字母用小写
  包可以避免类命名冲突,不同包名中的类名可以相同
    package test.day01;
    class Point{}  //有了包，类名就变成了test.day01.Point
    建议包名的命名如下：
      域名反写    .   项目名称   .  模块名称
      cn.tedu    .    aproject  .  stumanager
      com.taobao .    bpeoject  .  teachmanager
  import：
  1)同包中的类可以直接访问，同包中的类不能重名
    不同包中的类，不能直接访问，想访问有如下两种方式
      a.类的全称 oo.day01.Student zs = new oo.day01.Student()
      b.先import声明类(全称)，再直接访问
        import oo.day01.Student; 或 import oo.day01.*;(星号导致性能下降)
        Student a = new Student();
2.访问权限控制修饰符(java中不建议使用默认修饰符)
  设计程序的规则：数据(变量)私有化(private)，行为(方法)公开化(public)
  class Card{
    private String cardId;//卡号
    private String cardPwd;//密码
    private double banlance;//余额
    public boolean chackPwd(String pwd){ }//验证密码
    public double payMoney(double money){ }//看余额够不够
  }
  1)public:公开的，任何类中都能访问(可以跨包使用)  访问权限最大
  2)private:私有的，只能在本类中使用              访问权限最小
  3)protected:受保护的，在本类中 / 同包子类中/ 不同包子类中 / 同包类中都可以使用  访问权限中1
  4)默认的，什么也不写:在本类中 / 同包子类中 / 同包类中都可以使用                访问权限中2
  说明：
    类的访问修饰符只能是public(任何包中都能使用该类) 或 默认没有修饰符(只能在同包中使用该类,跨包无法import)
    类中的成员变量以上4种都可以用
    一般：
      超类的变量都设为protected
      构造方法和普通方法都要行为公开化，加public
      普通类的变量私有化
      方法重写的话：派生类方法的访问权限>=超类的
3.final：最终的、不可改变的------应用率低
  1)修饰变量：在变量前面加一个final，变量不可以修改
  2)修饰方法：方法不能被重写
  3)修饰类：类不能被继承
4.static:静态的
  最重要的：看那张内存图，理解方法区的class和静态变量只被创建一次，就是第一次new的时候就创建了，以后不会再创建；
  堆中的对象只要new一个就创建一个，根据以上结论来考虑使用静态变量/方法还是实例变量/方法
  1)静态变量：
    1.1)由static修饰
    1.2)属于类的，存储在方法区中，只有一份
    1.3)常常通过类名.xxx来访问
    1.4)何时使用：所有"对象"所共享的数据(图片、音频、视频等)
    成员变量包括：内存看图
      实例变量(属于对象的-存在堆中)：没有任何修饰 ----------有几个对象就有几份
        通过对象.xxx来访问
      静态变量(属于类的-存在方法区中)：由static修饰 ------- 相同的.class字节码文件和里面的静态变量 只有一份
        (跟类有关的都存在于方法区中，只被加载一次)  所以对象有多个，类只有一个，那么StaticDemo中的b就总发生变化
        通过类名.xxx来访问
  2)静态方法：  静态方法只能访问有static修饰的变量或方法
    2.1)由static修饰
    2.2)属于类的，存储在方法区中，只有一份
    2.3)常常通过类名.xxx来访问       注意：实例方法中默认有个this
    2.4)静态方法中没有this,而实例变量/方法还必须由对象点来访问,所以静态方法不能访问实例变量和实例方法,因为实例的东西是由对象来调用的
        静态/实例方法访问静态变量，若什么也不写则默认有一个“类名.”
    2.5)何时使用：
        方法操作的结果仅仅与参数相关而与对象无关。如:Math.sqrt(25)   类名.来调用
        "与对象无关"的意思就是该静态方法用不到对象的任何属性
        //学生类的sayHi就不适合做成静态方法，它的执行结果与对象是有关系的
    之前的遗留问题也解决了，如：day07中的Gusseing   oo.day01中的Student    射击游戏World类
    实例对象多还是静态变量多？ ---- 实例变量多
    实例方法多还是静态方法多？ ---- 实例方法多(静态方法访问不了实例变量)
  3)静态块：static块
      3.1)属于类的代码块，在类加载期间(在方法区进行加载类,只加载一次)自动执行的代码块，
        因为类只加载一次，所以上述的代码块就只执行一次
      3.2)何时使用：初始化/加载静态变量/资源(图片、音频、视频)  静态块中只能访问静态变量和静态方法

5.static final常量
