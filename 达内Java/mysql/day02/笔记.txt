###表设计 关联关系
####一对一
  什么是一对一：两张表A表和B表，A表中一条数据对应B表中的一条数据，这种关系成为一对一的关系
  应用场景：用户表和用户信息扩展表
          登录：select count(*) from user where usenamr='Tom' and passward='123456';
  如何建立关系：
    在从表中添加一个外键字段，值指向主表中的主键字段
  练习：
    创建user(id,uername,passward,userinfo)  和  userinfo(nick,qq,phone,user_id)
    两个表中个插入三条数据
####一对多
  什么是一对多：AB两张表，A表中1条数据对应B表中多条数据；B表中一条数据对应A表中一条数据
  应用场景：部门和员工/分类和商品等
  如何建立关系：一对多的两张表  在多的一端添加外键，记录另外一个表的主键值
  练习：
    创建员工表t_emp(id,ename,deptid) 和 部门表t_dept(id,name,loc)
    部门表数据：神仙部，天上； 妖怪部门，盘丝洞
    员工表数据：孙悟空，猪八戒，蜘蛛精，白骨精
    查询每个部门对应的每个员工
    查询盘丝洞工作的所有员工姓名
    查询孙悟空的工作地点和部门名称
####多对多
  什么是多对多:AB两张表，A表中一条对应B表中的多条数据，同时B表中的一条数据对应A表中的多条数据
  应用场景：老师和学生/用户表和角色表
  如何建立关系：需要创建一个单独的关系表，关系表中两个字段(外键字段)，保存两个表的主键值
  练习：
    创建三个表：stident(id,name) tacher(id,name) t_s(sid,tid)
    插入以下数据：
      苍老师对应的学生：小明，小红，小花
      刘老师对应的学生：小绿，小蓝，小明
      查询每个老师对应的所有学生 (三表连查)
        select t.name,s.name from student s left join t_s ts on s.id=ts.sid left join teacher t on t.id=ts.tid;
      查询小明的老师都有谁
        select t.name from student s left join t_s ts on s.id=ts.sid left join teacher t on t.id=ts.tid where s.name='小明';
      查询苍老师的所有学生
        select s.name from student s left join t_s ts on s.id=ts.sid left join teacher t on t.id=ts.tid where t.name='苍老师';
####自关联
  什么是自关联：在表中有一个外键字段，指向自己表的主键值，称为自关联
  应用场景，需要保存层级关系，但是不确定有多少层的时候，使用自关联，如上级领导或商品分类
  练习：
    查询员工姓名和对应的上级主管姓名
      select e.ename,m.ename from emp e left join emp m on e.mgr=m.empno;
####连接方式和关联关系
  连接方式：包括内连接和外连接（左外，右外），是关联查询的查询方式
  关联关系：包括一对一，一对多，多对多，是指设计表时两个表之间存在的逻辑关系
####案例：权限管理的表设计(5张表)
  用户表
  角色表
  权限表
  用户-角色关系表
  角色-权限关系表
  1.创建以上五张表
    create database db4;
    use db4;
    create table user(id int primary key auto_increment,name varchar(10));
    create table role(id int primary key auto_increment,name varchar(10));
    create table module(id int primary key auto_increment,name varchar(10));
    create table u_r(uid int,rid int);
    create table r_m(rid int,mid int);
  2.插入数据
    insert into user values(null,'刘德华'),(null,'张学友'),(null,'凤姐');
    insert into role values(null,'男游客'),(null,'男会员'),(null,'女游客'),(null,'女管理员');
    insert into module values(null,'男浏览'),(null,'男发帖'),(null,'女浏览'),(null,'女发帖'),(null,'女删帖');
    insert into u_r values(1,1),(2,2),(3,4),(3,2);
    insert into r_m values(1,1),(2,1),(2,2),(3,3),(4,3),(4,4),(4,5);
  3.查询每个用户对应的权限(4个表连在一起就行)
    select * from user u left join u_r ur on u.id=ur.uid left join r_m rm on ur.rid=rm.rid join module m on m.id=rm.mid;
  4.查询张学友的所有权限
    select m.name from user u left join u_r ur on u.id=ur.uid left join r_m rm on ur.rid=rm.rid join module m on m.id=rm.mid where u.name='张学友';
  5.查询男发帖的用户都有哪些
    select u.name from user u left join u_r ur on u.id=ur.uid left join r_m rm on ur.rid=rm.rid join module m on m.id=rm.mid where m.name='男发帖';
