创建一个新表
create database jdbc2;
use jdbc2;
create table user(id int primary key auto_increment,name varchar(10),age int);


###PreparedStatement
预编译的sql执行对象
好处：1.代码可读性高，不容易出错
      2.带有预编译效果，执行效率比statement略高
      3.可以避免sql注入,因为预编译的时候已经sql语句逻辑固定，替换?符号进去的内容只能以
      值的形式体现
      sql中有变量就用PreparedStatement，没有变量就用Statement
使用方式：看代码TestStatement8.java、TestStatement9.java


###通过登录案例演示sql注入 TestLogin10.java
  字符串拼接可能造成sql注入
  create table t_login(id int primary key auto_increment,username varchar(10),password varchar(10));
  insert into t_login values(null, 'libai','admin'),(null,'lisi','admin');

###批量操作 batch
  - 批量操作可以把多次sql合并成一次执行，避免了频繁和数据库服务器进行交互，从而提高执行效率
  -代码参见 TestBatch.java

####分页查询
在控制台输入页数和每页的数量，得到对应的内容
如：输入。页数3，每页数量5 则得到第11～15条数据

###事务
Demo05.java   代码模板见 sqlwhjspecial
设置自动提交的状态 conn.setAutoCommit(true/false);
提交 conn.commit()
回滚 conn.rollback()
set autocommit=0;
create table account(id int primary key auto_increment,name varchar(10),balance int);
insert into account values(null,'范老师',500);
insert into account values(null,'刘老师',1500);
insert into account values(null,'何仙姑',2000);
update account set balance=balance-1000 where id=2;
update account set balance=balance+1000 where id=1;
commit;
update操作一张表的时候,如果不设置自动提交并且不执行commit,对该表的其他操作不可以进行处理，会出现卡顿显现,这是数据库隔离型

#####练习:实现蝙蝠侠给超人转帐。超人有500   蝙蝠侠有5000
代码运行 蝙蝠侠给超人转账2000   前两次转账成功提交，第三次转账失败，回滚
创建TransactionTest.java类
添加main方法 在方法中实现上面的流程
create table person(id int primary key auto_increment,name varchar(10),money int);
insert into person values(null,"超人",500),(null,"蝙蝠侠",5000);

####获取自增主键值
员工表  id name
部门表  id name deputed

###练习：往部门表插入一个神仙部，同时往员工表插入孙悟空和猪八戒并且和神仙部建立关系. DeptAndEmpTest.java
create table dept(id int primary key auto_increment,name varchar(10));
Create table emp(id int primary key auto_increment,name varchar(10),deputed int);

###获取元数据
- 数据库的元数据
  数据库厂商（mysql,oracle）,数据库的连接信息等都称为数据库的元数据
- 表的元数据：表有哪些字段，字段类型等





ctrl+shift+o 自动导包
