Servlet介绍
1.服务器如何保存并返回一个网页
  1)静态网页：无论谁看内容都一样，服务器直接存HTML,直接返回HTML即可
  2)动态网页：不同人看到的内容有差异，服务器保存一个组件，动态给每个用户拼一个网页，
    组件就是满足规范的对象，在java中，这个组件就是Servlet
2.Servlet特点
  是服务器端的组件
  满足sun的规范
  可以动态拼资源(HTML/IMG等)
  术语:处理HTTP协议
3.什么是Servlet
  是sun推出的，用于在服务器端处理HTTP协议的组件

服务器
1.名称
  Java服务器
  WEB服务器
  Java WEB服务器
  Servlet容器
2.本质
  是一个软件
  它和浏览器是平级的关系
3.举例
  Tomcat(Apache)
  JBoss
  WebLogic
  WebSphere

Tomcat的使用方式
1.单独使用(项目上线时)：
  1)必须配置好JAVA_HOME
  2)下载及安装：Apache官网  绿色版解压缩即可用
  3)启动(千万不要启动多次)
    Linux:打开tomct/bin, 在终端输入chmod +x *sh
    Linux:打开tomct/bin, 在终端输入./startup.sh
    Windows:打开tomct/bin,双击startup.bat
  4)访问tomcat
    在浏览器中输入http://localhost:8080  看到猫咪就代表成功
  5)关闭tomcat
    Linux:打开tomct/bin, 在终端输入./shutdown.sh
    Windows:打开tomct/bin,双击shutdown.bat
2.通过Eclipse调用(*常用，开发时)
  Tomcat的安装与配置
    1)window-Preferences-Server-RunTime Environment-Add-选7.0版本-勾选Create a new local server-Next-Browerser-选择现有的7版本-finish-OK
    2)打开eclipes控制台-选Servers(若没有，window-Show View-other-搜索Servers)-双击下面的tomcat7-在Servef Locations中选第二个Use Tomcat ins... - Ctrl+s
    3)在控制台Servers下，点击三角按钮 - http://localhost:8080 看到猫就意味着启动成功
    4)点红色方块按钮，即可关闭tomcat
    补充：若配置失败，需要重来，
    1)window-Preferences-Server-RunTime Environment-右侧选择tomcat，然后点击remove按钮
    2)在eclipse中将自动生成的servers项目删除，再按照以上4步进行重新配置

Servlet开发步骤
1.创建WEB的maven项目(见图片 “创建Serlet的maven项目.png”)：必须具备标准的web目录。/webapp/WEB-INF/web.xml,该文件手动创建到webapp目录中，其内容看web.xml
2.导入jar包 两种导入方式：
  1)使用maven,搜索javaee-api（不建议使用maven）
  2)使用tomcat自带的包 
    在tomcat文件夹中打开lib目录,找到servlet-api.jar
    右键项目-properties-Targeted Runtimes-勾选上Apache Tomcat V7.0
3.开发servlet
  1)编写Servlet
    创建package
    创建一个类，名为XxxServlet
    继承HttpServlet，从而间接实现了Servlet接口
    重写父类的service()
  2)配置Servlet (也就是在web.xml中进行配置)
    先声明类，并给它取别名
    再通过别名引用此类，给它取一个访问路径
4.部署
  在servlet标签下右键tomcat7-Add and Remove，在左边选中要部署的项目-Add-变化到右边，代表已部署-finish-重启tomcat, 项目被复制到了tomcat文件夹下的wtpwebapps目录中
5.访问
  格式 http://ip:port/项目名/网名
  例子 http://localhost:8080/servlet1/ts
6.改了代码以后要重新部署，在servlet标签下右键tomcat7-Publish

补充：
1.tomcat的常见使用问题
  1)问题描述
  在启动tomcat时看到如下的错误
  address already in use, JVM_BIND:8080
  2)产生的原因
    重复启动tomcat造成8080端口的冲突 或 其他软件也占用了8080端口
  3)解决方案
    启动原因：打开tomcat/bin目录，通过双击shutdown.bat
    其他软件：打开D:\apache-tomcat-7.0.6\conf\server.xml,在65行修改tomcat端口
             或
             eclipes中的servers项目中打开server.xml,在<Connector connectionTimeout="20000" port="8080" protocol="HTTP/1.1" redirectPort="8443"/>行修改tomcat端口port
             修改后要重启tomcat才可使用
